/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <hamsandwich>
#include <engine>

new Trie:gWeaponModels;

public plugin_precache( ) 
{
    gWeaponModels = TrieCreate( );
    
    load_settings( "models.ini" );
}

load_settings( const File[] )
{
    new iFile = fopen( File, "rt" ); 
    if( !iFile ) return;
    
    new szBuffer[1024], classname[ 32 ] , model[ 64 ]
    while( !feof( iFile ) ) 
    { 
        fgets( iFile, szBuffer, charsmax( szBuffer ) ); 
        
        remove_quotes( szBuffer )
        
        if( check_invalid_chars(szBuffer) )
            continue
        
        parse( szBuffer, classname, charsmax(classname), model, charsmax(model) );
        
        precache_model( model );
        
        if( !TrieKeyExists( gWeaponModels, classname ) ) {
            RegisterHam( Ham_Item_Deploy, classname, "FwdItemDeployPost", 1 );
        }
        
        TrieSetString( gWeaponModels, classname, model );
    } 
}

public FwdItemDeployPost( entity )
{
    new classname[ 32 ], model[ 64 ];
    entity_get_string( entity, EV_SZ_classname, classname, charsmax( classname ) );

    if( TrieGetString( gWeaponModels, classname, model, charsmax( model ) ) )
    {
        const m_pPlayer = 41;
        
        new id = get_pdata_cbase( entity, m_pPlayer, 4 );
        
        entity_set_string( id, EV_SZ_viewmodel, model );
    }
}


bool:check_invalid_chars( const string[] = " " )
{
    if( string[0] == '#' || string[0] == ';' || (string[0] == '/' && string[1] == '/' ) )
        return true; // se encontro un string invalido , por lo tanto returna con 1 ( true )
    
    return false; // no se encontro nada , por lo tanto , returnea 0 (falso , no se encontro ningun dato)
    
}
